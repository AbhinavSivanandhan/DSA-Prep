https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/
https://leetcode.com/problems/find-the-substring-with-maximum-cost/solutions/?orderBy=most_votes
You are given a string s, a string chars of distinct characters and an integer array vals of the same length as chars.

The cost of the substring is the sum of the values of each character in the substring. The cost of an empty string is considered 0

And some extra conditions

Return the maximum cost among all substrings of the string s.

class Solution:
    def maximumCostSubstring(self, s: str, chars: str, vals: List[int]) -> int:
            d={}
            for i in 'abcdefghijklmnopqrstuvwxyz':
                d[i]=ord(i)-96
            
            for i in range(len(chars)):
                temp=chars[i]
                d[temp]=vals[i]
            print(d)
            maxVal=0
            maxCur=0
            for i in s:
                maxCur+=d[i]
                if maxVal<maxCur:
                    maxVal=maxCur
                if maxCur<0:
                    maxCur=0
                
            return maxVal