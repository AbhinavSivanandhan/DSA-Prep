https://leetcode.com/contest/biweekly-contest-104/problems/maximum-or/

You are given a 0-indexed integer array nums of length n and an integer k. In an operation, you can choose an element and multiply it by 2.

Return the maximum possible value of nums[0] | nums[1] | ... | nums[n - 1] that can be obtained after applying the operation on nums at most k times.

https://www.youtube.com/watch?v=4oefhlptNnA

    def maximumOr(self, A: List[int], k: int) -> int:
        res, left, n = 0, 0, len(A)
        right = [0] * n
        for i in range(n - 2, -1, -1):
            right[i] = right[i + 1] | A[i + 1]
        for i in range(n):
            res = max(res, left | A[i] << k | right[i])
            left |= A[i]
        return res