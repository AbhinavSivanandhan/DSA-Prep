Problem:
You are given an array of non-overlapping intervals intervals where intervals[i] = [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval = [start, end] that represents the start and end of another interval.

Insert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary).

Return intervals after the insertion.

class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        res=[]
        for i in range(len(intervals)):
            if newInterval[1] < intervals[i][0]:
                res.append(newInterval)
                return res+intervals[i:]
            elif newInterval[0]>intervals[i][1]: #how do we handle intervals[i][0], don't we check?
                res.append(intervals[i])
            else:
                newInterval = [min(intervals[i][0],newInterval[0]), max(intervals[i][1],newInterval[1])]
        res.append(newInterval)
        return res

My solution(i don't use extra array, but messy code):
class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        if len(intervals)==0: #if empty list just insert
            return [newInterval]
        for i in reversed(range(0,len(intervals))): #traverse to find overlap
            if intervals[i][0]<=newInterval[1] and intervals[i][1]>=newInterval[0]: #overlap condition
                start=i #mark index where we find overlap,end
                end=i
                while start>0 and intervals[start-1][1]>=newInterval[0]: #find start index by checking backward
                    start-=1
                #end of insertion process, stop traversal
                newInterval=[min(intervals[start][0],newInterval[0]),max(intervals[end][1],newInterval[1])]
                intervals=[intervals[i] for i in range(0,len(intervals)) if (i<start or i>end)]
                intervals.insert(start, newInterval)
                return intervals
        for i in range(0,len(intervals)): #if no overlap, just insert
            if newInterval[0]<intervals[i][0]:
                intervals.insert(i, newInterval)
                return intervals
        intervals.insert(len(intervals), newInterval)
        return intervals
