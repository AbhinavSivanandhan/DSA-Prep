You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

Increment the large integer by one and return the resulting array of digits.

Time complexity: 
O(n)
Space complexity: 
O(1)

class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        carry=1 #for first round carry is used as the One we are adding
        for i in reversed(range(0,len(digits))):
            temp=digits[i]+carry
            digits[i]=(digits[i]+carry)%10
            if temp>=10:
                carry=1
            else:
                carry=0

        if carry!=0:
            digits.insert(0,carry)
        return digits
