Maximum Depth of Binary Tree

Given the root of a binary tree, return its maximum depth.
A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Solution:
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def Traverse(self, root, count):
        if root:
            count+=1
            return max(self.Traverse(root.left,count),self.Traverse(root.right,count))
        else:
            return count
        

    def maxDepth(self, root: Optional[TreeNode]) -> int:
        count=0
        return self.Traverse(root,count)