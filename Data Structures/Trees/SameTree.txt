Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

Solution:

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def Traverse(self, p, q):
        if p and q:
            if p.val==q.val:
                pass
            else:
                return
            print(p.val, q.val)
            return self.Traverse(p.left, q.left) and self.Traverse(p.right, q.right)
        elif p:
            return False
        elif q:
            return False
        else:
            return True
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        answer=self.Traverse(p,q)
        print(answer)
        return answer